name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile
          push: true
          tags: ghcr.io/tunsworthy/baby_organiser_frontend:latest
          platforms: linux/arm64/v8
     
      - name: Build and push Backedn Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend_API
          file: ./Backend_API/Dockerfile
          push: true
          tags: ghcr.io/tunsworthy/baby_organiser_backend_api:latest
          platforms: linux/arm64/v8
  Deploy:
      needs: build-and-push
      runs-on: [self-hosted,Production]
      steps:
        - name: Clone Repo or Update
          run: |
            cd ~/Docker-Compose
            if [ -d "baby_organiser/.git" ]; then
              echo "Repository already exists. Pulling latest changes..."
              cd baby_organiser
              git pull
            else
              echo "Cloning repository..."
              git clone -n --depth=1 --filter=tree:0 \
                https://github.com/Tunsworthy/baby_organiser.git
              cd baby_organiser
            fi
        
            git sparse-checkout set --no-cone /Baby_Organsier
            git checkout
        - name: Start Services with Docker Compose
          run: |
            cd ~/Docker-Compose/baby_organiser/Baby_Organsier
            # Check if .env exists and remove it
            [ -f .env ] && rm .env
            
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
            echo "POSTGRES_URI=${{ secrets.POSTGRES_URI }}" >> .env 
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "SERVER=${{ secrets.SERVER }}" >> .env
            echo "BABY_NGINX_IP=${{ secrets.BABY_NGINX_IP }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        
            docker-compose up -d
